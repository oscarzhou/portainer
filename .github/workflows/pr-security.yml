name: Code Security Scan

on: 
  push:
    branches:
      - develop 
  pull_request:
    branches:
      - develop
  schedule:
    - cron: '30 * * * *'
jobs:
  client-dependencies:
    name: Client dependency check
    runs-on: ubuntu-latest
    outputs:
      js: ${{ steps.set-matrix.outputs.js_result }}
    steps:
      - uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that artifact upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --fail-on=upgradable
          json: true

      - name: Upload js security scan result as artifact
        uses: actions/upload-artifact@v3
        with:
          name: js-security-scan-result.json
          path: snyk.json

      - name: Analyse the result
        id: set-matrix
        run: | 
          result=$(docker run --rm -v /home/runner/work/portainer/portainer:/data oscarzhou/scan-report:0.1.1 -action=summary -report-type=snyk -path="/data/snyk.json")
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          result=`echo $(echo ${result} | jq -c '.')`
          echo "::set-output name=js_result::${result}"
          echo $result

  result-analysis:
    name: Analyse scan result
    needs: [client-dependencies]
    runs-on: ubuntu-latest
    strategy:
      js: ${{ fromJSON(needs.client-dependencies.outputs.js) }}
    steps:
      - name: Display the js result
        run: |
          echo ${{ matrix }}

  # server-dependencies:
  #   name: Server dependency check
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./api
  #   steps:
  #     - uses: actions/checkout@master

  #     - name: Download dependencies
  #       run: go get -v -d

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/golang@master
  #       continue-on-error: true # To make sure that artifact upload gets called
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --severity-threshold=high --file=./api/go.mod
  #         json: true

  #     - name: Upload go security scan result as artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: go-security-scan-result.json
  #         path: snyk.json
