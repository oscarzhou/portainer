on: push

jobs:
  client-dependencies:
    name: Client dependency check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --fail-on=upgradable --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  server-dependencies:
    name: Server dependency check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@master

      - name: Download dependencies
        run: go get -v -d

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif --file=./api/go.mod

      - name: Upload result to GitHub Code Scanning
        id: server-scan
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  build_app:
    name: Build app and api and docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Use golang 1.17.x
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install packages and build
        run: yarn install && yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: build/linux/Dockerfile
          tags: trivy-portainer:${{ github.sha }}
          outputs: type=docker,dest=/tmp/trivy-portainer-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-artifact
          path: /tmp/trivy-portainer-image.tar

  image-vulnerability:
    name: Image vulnerability check
    needs: [build_app]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:  
          name: image-artifact
          path: /tmp

      - name: Load docker image
        run: |
          docker load --input /tmp/trivy-portainer-image.tar

      - name: Run Trivy vulnerability scanner
        uses: docker://docker.io/aquasec/trivy:latest
        continue-on-error: true # To make sure that SARIF upload gets called
        with:
          args: image --ignore-unfixed=true --vuln-type="os,library" --severity="CRITICAL,HIGH,MEDIUM" --exit-code=1 --format="sarif" --output="trivy-results.sarif" --no-progress trivy-portainer:${{ github.sha }}
          
      - name: Upload Trivy scan results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

  scan-result:
    name: Send notification to slack channel
    needs: [client-dependencies, server-dependencies, image-vulnerability]
    runs-on: ubuntu-latest
    steps:
      - name: Post to a Slack channel
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'C03AP34SJQ7'
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "Pull Request: ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}\nCommit: ${{ github.event.head_commit.message }} (${{ github.event.head_commit.url }})\nCode scanning results: ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}/checks\nCode scanning alerts (Snyk scan) ${{ github.event.repository.html_url }}/security/code-scanning?query=pr%3A${{ github.event.repository.open_issues }}+tool%3A\"Snyk+Open+Source\"+is%3Aopen\nCode scanning alerts (Trivy scan) ${{ github.event.repository.html_url }}/security/code-scanning?query=pr%3A${{ github.event.repository.open_issues }}+tool%3ATrivy+is%3Aopen",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Pull Request: ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}\nCommit: ${{ github.event.head_commit.message }} (${{ github.event.head_commit.url }})\nCode scanning results: ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}/checks\nCode scanning alerts (Snyk scan) ${{ github.event.repository.html_url }}/security/code-scanning?query=pr%3A${{ github.event.repository.open_issues }}+tool%3A\"Snyk+Open+Source\"+is%3Aopen\nCode scanning alerts (Trivy scan) ${{ github.event.repository.html_url }}/security/code-scanning?query=pr%3A${{ github.event.repository.open_issues }}+tool%3ATrivy+is%3Aopen"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}       