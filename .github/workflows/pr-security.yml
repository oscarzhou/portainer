name: Code Security Scan

on: 
  push:
    branches:
      - develop 
  pull_request:
    branches:
      - develop
  schedule:
    - cron: '30 * * * *'
jobs:
  client-dependencies:
    name: Client dependency check
    runs-on: ubuntu-latest
    outputs:
      js: ${{ steps.set-matrix.outputs.js_result }}
    steps:
      - uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that artifact upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --fail-on=upgradable
          json: true

      - name: Upload js security scan result as artifact
        uses: actions/upload-artifact@v3
        with:
          name: js-security-scan-result.json
          path: snyk.json

      - name: Analyse the result
        id: set-matrix
        run: | 
          result=$(docker run --rm -v /home/runner/work/portainer/portainer:/data oscarzhou/scan-report:0.1.2 -action=summary -report-type=snyk -path="/data/snyk.json" -output-type=matrix)
          echo "::set-output name=js_result::${result}"


      - name: Dump context json
        id: github_context_step
        run: echo '${{ toJSON(github) }}'


  result-analysis:
    name: Analyse scan result
    needs: client-dependencies
    runs-on: ubuntu-latest
    if: >- 
      github.ref == 'refs/heads/develop' ||
      github.ref == 'refs/heads/security-scan-ee'
    strategy:
      matrix: 
        js: ${{fromJson(needs.client-dependencies.outputs.js)}}
    steps:
      - name: Display the js result
        run: |
          echo ${{ matrix.js.summary }}

      - name: Post the result to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'C039ZB872N5'
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "Code Scanning Result: ${{ matrix.js.status }}\n${{ matrix.js.summary }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Code Scanning Result: ${{ matrix.js.status }}\n${{ matrix.js.summary }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}



  # server-dependencies:
  #   name: Server dependency check
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./api
  #   steps:
  #     - uses: actions/checkout@master

  #     - name: Download dependencies
  #       run: go get -v -d

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/golang@master
  #       continue-on-error: true # To make sure that artifact upload gets called
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --severity-threshold=high --file=./api/go.mod
  #         json: true

  #     - name: Upload go security scan result as artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: go-security-scan-result.json
  #         path: snyk.json
