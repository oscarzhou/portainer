on: push

jobs:
  client-dependencies:
    name: Client dependency check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --fail-on=upgradable --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  server-dependencies:
    name: Server dependency check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@master

      - name: Download dependencies
        run: go get -v -d

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif --file=./api/go.mod

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'C039ZB872N5'
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "PR: ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}\nCommit: ${{ github.event.head_commit.url }}\nCode scanning results (Snyk Open Source): ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}/checks?check_run_id=${{ github.run_id }}\nCode scanning results (Trivy Open Source): ${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}/checks?check_run_id=${{ github.run_id }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.event.repository.html_url }}/pull/${{ github.event.repository.open_issues }}/checks"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}       